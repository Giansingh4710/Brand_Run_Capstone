/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 hurdle.glb -T 
Files: hurdle.glb [8.39KB] > hurdle-transformed.glb [1.56KB] (81%)
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

function Laser(props) {
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={new THREE.CylinderGeometry(1, 1, 1.5, 6)}
        position={[0, 0.6, 0]}
        rotation={[0, 0, Math.PI / 2]}
        scale={[0.25, 1, 0.5]}
      >
        <meshBasicMaterial 
          color="#e83b3b"
        />
        <pointLight color="#e83b3b" power={50} />
      </mesh>
    </group>
  )
}

export function Hurdle(props) {
  const { nodes, materials } = useGLTF('/gltf/hurdle-transformed.glb')

  const material = new THREE.MeshStandardMaterial({
    metalness: 0.8,
    roughness: 0.2
  });

  return (
    <group {...props} scale={0.325} dispose={null} ref={props.innerRef}>
      <mesh
        geometry={nodes.Hurdle.geometry}
        material={material}
        position={[0, 1.15, 0]}
        scale={[1, 1, 0.5]}
      >
        <Laser />
      </mesh>
    </group>
  )
}

export function TallHurdle(props) {
  const { nodes, materials } = useGLTF('/gltf/hurdle-transformed.glb')

  const material = new THREE.MeshStandardMaterial({
    metalness: 0.8,
    roughness: 0.2
  });

  return (
    <group {...props} scale={0.325} dispose={null} ref={props.innerRef}>
      <mesh
        geometry={nodes.Hurdle.geometry}
        material={material}
        position={[0, 3.5, 0]}
        scale={[1, 3, 0.5]}
      >
        <Laser scale={[1, 0.33, 1]} position={[0, 0.55, 0]}/>
        <Laser scale={[1, 0.33, 1]} position={[0, 0.22, 0]}/>
        <Laser scale={[1, 0.33, 1]} position={[0, -0.11, 0]}/>
        <Laser scale={[1, 0.33, 1]} position={[0, -0.11, 0]}/>
        <Laser scale={[1, 0.33, 1]} position={[0, -0.44, 0]}/>
        <Laser scale={[1, 0.33, 1]} position={[0, -0.77, 0]}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/gltf/hurdle-transformed.glb')
